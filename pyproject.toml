[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "Surfactant"
authors = [
    {name = "Levi Lloyd", email = "lloyd27@llnl.gov"},
    {name = "Ryan Mast", email = "mast9@llnl.gov"},
    {name = "Micaela Gallegos", email = "gallegos31@llnl.gov"},
    {name = "Alexander Armstrong", email = "armstrong48@llnl.gov"},
]
maintainers = [
    {name = "Ryan Mast", email = "mast9@llnl.gov"},
]
description = "Generate an SBOM using information from file metadata"
readme = "README.md"
requires-python = ">=3.8"
keywords = ["sbom", "pe", "elf", "ole", "msi"]
license = {text = "BSD-3-Clause"}
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Topic :: Security",
    "Topic :: Software Development",
    "Topic :: System",
    "Topic :: Utilities",
]
dependencies = [
    "pyelftools",
    "pefile",
    "dnfile",
    "olefile",
    "defusedxml",
    "deepdiff",
    "spdx",
]
dynamic = ["version"]

[project.optional-dependencies]
tests = ["pytest"]

[project.scripts]
# After generate_cytrics_sbom.py is moved to surfactant/__main__.py, this will allow running surfactant from the git repo with python -m surfactant
#surfactant = "surfactant.__main__:main"

[project.urls]
homepage = "https://lc.llnl.gov/gitlab/cir-software-assurance/sbom-surfactant"
#documentation = "https://readthedocs.org"
#repository = "https://github.com/me/spam.git"
#changelog = "https://github.com/me/spam/blob/master/CHANGELOG.md"

[tool.setuptools_scm]

[tool.pytest.ini_options]
addopts = ["--import-mode=importlib"]
pythonpath = "."

[tool.pylint.messages_control]
max-line-length = "100"
good-names-rgxs = "x,y,e,md,sw"
disable = [
  "line-too-long",
  "missing-module-docstring",
  "missing-class-docstring",
  "missing-function-docstring",
  "duplicate-code",
  "too-many-branches",
  "too-many-statements",
  "unused-variable",
  "invalid-name",
  "no-member",
  "too-many-nested-blocks",
  "consider-using-with",
  "fixme",
  "unused-import",
  "too-many-locals",
  "unused-argument",
  "signature-differs",
  "useless-object-inheritance",
  "use-dict-literal",
  "import-outside-toplevel",
  "wrong-import-position",
  "import-error",
  "unspecified-encoding",
]
